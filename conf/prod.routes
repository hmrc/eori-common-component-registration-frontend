
#----------------------------------

->         /customs-registration-services/hmrc-frontend                                                  hmrcfrontend.Routes

GET         /customs-registration-services/assets/*file                                                  @controllers.Assets.versioned(path="/public", file: Asset)
GET         /public/*file                                                                                @controllers.Assets.versioned(path="/public", file: Asset)

# enrolment-already-exists
GET         /customs-registration-services/:service/register/enrolment-already-exists                    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.EnrolmentAlreadyExistsController.enrolmentAlreadyExists(service: Service)
GET         /customs-registration-services/:service/register/enrolment-already-exists-for-group          @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.EnrolmentAlreadyExistsController.enrolmentAlreadyExistsForGroup(service: Service)
GET         /customs-registration-services/:service/register/cds-enrolment-exists                        @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.EnrolmentAlreadyExistsController.enrolmentAlreadyExistsStandalone(service: Service)
GET         /customs-registration-services/:service/register/cds-enrolment-exists-for-group              @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.EnrolmentAlreadyExistsController.enrolmentAlreadyExistsForGroupStandalone(service: Service)

# eori-already-exists
GET         /customs-registration-services/:service/register/you-already-have-an-eori                    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.YouAlreadyHaveEoriController.display(service: Service)

# standalone-eori-already-exists
GET         /customs-registration-services/:service/register/already-have-an-eori                        @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.YouAlreadyHaveEoriController.displayStandAlone(service: Service)

GET         /customs-registration-services/:service/register/display-sign-out                            @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SecuritySignOutController.displayPage(service: Service)
GET         /customs-registration-services/:service/register/sign-out                                    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SecuritySignOutController.signOut(service: Service)

GET         /customs-registration-services/:service/register/you-cannot-use-service                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.YouCannotUseServiceController.page(service: Service)
GET         /customs-registration-services/:service/register/unauthorised                                @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.YouCannotUseServiceController.unauthorisedPage(service: Service)

GET         /customs-registration-services/register/keep-alive                                           @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ApplicationController.keepAlive()

GET         /customs-registration-services/:service/register/email-confirmed                             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.email.CheckYourEmailController.emailConfirmed(service: Service)
GET         /customs-registration-services/:service/register/email-confirmed-continue                    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.email.CheckYourEmailController.emailConfirmedContinue(service: Service)

GET         /customs-registration-services/:service/register/check-user                                  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.EmailController.form(service: Service)

GET         /customs-registration-services/:service/register/matching/review-determine                   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DetermineReviewPageController.determineRoute(service: Service)

GET         /customs-registration-services/:service/register/matching/what-is-your-email                 @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.email.WhatIsYourEmailController.createForm(service: Service)
POST        /customs-registration-services/:service/register/matching/what-is-your-email                 @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.email.WhatIsYourEmailController.submit(service: Service)

GET         /customs-registration-services/:service/register/matching/check-your-email                   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.email.CheckYourEmailController.createForm(service: Service)
POST        /customs-registration-services/:service/register/matching/check-your-email                   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.email.CheckYourEmailController.submit(isInReviewMode: Boolean = false, service: Service)

GET         /customs-registration-services/:service/register/matching/verify-your-email                  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.email.CheckYourEmailController.verifyEmailView(service: Service)

GET         /customs-registration-services/:service/register/matching/locked-email                       @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.email.LockedEmailController.onPageLoad(service: Service)

# register Get An Eori
GET         /customs-registration-services/:service/register                                             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ApplicationController.startRegister(service: Service)

GET         /customs-registration-services/:service/register/are-you-vat-registered-in-uk                @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatRegisteredUkKanaController.form(service: Service)
POST        /customs-registration-services/:service/register/are-you-vat-registered-in-uk                @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatRegisteredUkKanaController.submit(service: Service)

GET         /customs-registration-services/:service/register/you-need-different-service-iom              @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.YouNeedADifferentServiceIomController.form(service: Service)

GET         /customs-registration-services/:service/register/use-a-different-service                     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.UseADifferentServiceController.form(service: Service)

GET         /customs-registration-services/:service/register/review-details                              @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.CheckYourDetailsRegisterController.reviewDetails(service: Service)
POST        /customs-registration-services/:service/register/subscribe                                   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.CheckYourDetailsRegisterController.submitDetails(service: Service)

GET         /customs-registration-services/:service/register/download/text                                        @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DownloadTextController.download(service: Service)


GET         /customs-registration-services/:service/register/processing                                  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ConfirmContactDetailsController.processing(service: Service)

GET         /customs-registration-services/:service/register/user-already-has-eori                       @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.Sub02Controller.eoriAlreadyExists(service: Service)
GET         /customs-registration-services/:service/register/user-already-has-eori-associated            @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.Sub02Controller.eoriAlreadyAssociated(service: Service)
GET         /customs-registration-services/:service/register/subscription-in-progress                    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.Sub02Controller.subscriptionInProgress(service: Service)
GET         /customs-registration-services/:service/register/request-not-processed                       @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.Sub02Controller.requestNotProcessed(service: Service)
GET         /customs-registration-services/:service/register/review                                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.Sub02Controller.pending(service: Service)
GET         /customs-registration-services/:service/register/complete                                    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.Sub02Controller.end(service: Service)

GET         /customs-registration-services/:service/register/business-details-recovery                   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.BusinessDetailsRecoveryController.form(service: Service)
GET         /customs-registration-services/:service/register/business-details-recovery/continue          @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.BusinessDetailsRecoveryController.continue(service: Service)

# Return
GET         /customs-registration-services/:service/register/return-processing                           @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.UserLocationController.processing(service: Service)
GET         /customs-registration-services/:service/register/matching/user-location                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.UserLocationController.form(service: Service)
POST        /customs-registration-services/:service/register/matching/user-location                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.UserLocationController.submit(service: Service)
GET         /customs-registration-services/:service/register/matching/organisation-type                  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.OrganisationTypeController.form(service: Service)
POST        /customs-registration-services/:service/register/matching/organisation-type                  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.OrganisationTypeController.submit(service: Service)
GET         /customs-registration-services/:service/register/matching/confirm                            @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ConfirmContactDetailsController.form(service: Service, isInReviewMode: Boolean = false)
POST        /customs-registration-services/:service/register/matching/confirm                            @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ConfirmContactDetailsController.submit(service: Service, isInReviewMode: Boolean = false)
GET         /customs-registration-services/:service/register/matching/confirm/review                     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ConfirmContactDetailsController.form(service: Service, isInReviewMode: Boolean = true)
POST        /customs-registration-services/:service/register/matching/confirm/review                     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ConfirmContactDetailsController.submit(service: Service, isInReviewMode: Boolean = true)

GET         /customs-registration-services/:service/register/matching/nino/:organisationType             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.NinoController.form(organisationType, service: Service)
POST        /customs-registration-services/:service/register/matching/nino/:organisationType             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.NinoController.submit(organisationType, service: Service)
GET         /customs-registration-services/:service/register/matching/name-date-of-birth/:organisationType        @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.NameDobController.form(organisationType, service: Service)
POST        /customs-registration-services/:service/register/matching/name-date-of-birth/:organisationType        @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.NameDobController.submit(organisationType, service: Service)
GET         /customs-registration-services/:service/register/matching/chooseid                           @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.HowCanWeIdentifyYouController.createForm(service: Service)
POST        /customs-registration-services/:service/register/matching/chooseid                           @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.HowCanWeIdentifyYouController.submit(service: Service)
GET         /customs-registration-services/:service/register/matching/chooseid/nino                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.GYEHowCanWeIdentifyYouNinoController.form(service: Service)
POST        /customs-registration-services/:service/register/matching/chooseid/nino                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.GYEHowCanWeIdentifyYouNinoController.submit(service: Service)
GET         /customs-registration-services/:service/register/matching/chooseid/utr                       @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.GYEHowCanWeIdentifyYouUtrController.form(service: Service)
POST        /customs-registration-services/:service/register/matching/chooseid/utr                       @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.GYEHowCanWeIdentifyYouUtrController.submit(service: Service)

GET         /customs-registration-services/:service/register/matching/address/:organisationType          @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SixLineAddressController.showForm(isInReviewMode: Boolean = false, organisationType, service: Service)
POST        /customs-registration-services/:service/register/matching/address/:organisationType          @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SixLineAddressController.submit(isInReviewMode: Boolean = false, organisationType, service: Service)
GET         /customs-registration-services/:service/register/matching/address/:organisationType/review   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SixLineAddressController.showForm(isInReviewMode: Boolean = true, organisationType, service: Service)
POST        /customs-registration-services/:service/register/matching/address/:organisationType/review   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SixLineAddressController.submit(isInReviewMode: Boolean = true, organisationType, service: Service)


GET         /customs-registration-services/:service/register/address                                     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.AddressController.createForm(service: Service)
POST        /customs-registration-services/:service/register/address                                     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.AddressController.submit(isInReviewMode:Boolean = false, service: Service)
GET         /customs-registration-services/:service/register/address/review                              @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.AddressController.reviewForm(service: Service)
POST        /customs-registration-services/:service/register/address/review                              @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.AddressController.submit(isInReviewMode:Boolean = true, service: Service)

GET         /customs-registration-services/:service/register/matching/:organisationType                  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.NameIdOrganisationController.form(organisationType, service: Service)
POST        /customs-registration-services/:service/register/matching/:organisationType                  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.NameIdOrganisationController.submit(organisationType, service: Service)
GET         /customs-registration-services/:service/register/matching/name/:organisationType             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.WhatIsYourOrgNameController.showForm(isInReviewMode: Boolean = false, organisationType, service: Service)
POST        /customs-registration-services/:service/register/matching/name/:organisationType             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.WhatIsYourOrgNameController.submit(isInReviewMode: Boolean = false, organisationType, service: Service)
GET         /customs-registration-services/:service/register/matching/name/:organisationType/review      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.WhatIsYourOrgNameController.showForm(isInReviewMode: Boolean = true,organisationType, service: Service)
POST        /customs-registration-services/:service/register/matching/name/:organisationType/review      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.WhatIsYourOrgNameController.submit(isInReviewMode: Boolean = true, organisationType, service: Service)
GET         /customs-registration-services/:service/register/matching/utr/:organisationType              @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DoYouHaveAUtrNumberController.form(organisationType, service: Service, isInReviewMode: Boolean = false)
POST        /customs-registration-services/:service/register/matching/utr/:organisationType              @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DoYouHaveAUtrNumberController.submit(organisationType, service: Service, isInReviewMode: Boolean = false)
GET         /customs-registration-services/:service/register/matching/utr/:organisationType/review       @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DoYouHaveAUtrNumberController.form(organisationType, service: Service, isInReviewMode: Boolean = true)
POST        /customs-registration-services/:service/register/matching/utr/:organisationType/review       @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DoYouHaveAUtrNumberController.submit(organisationType, service: Service, isInReviewMode: Boolean = true)
GET         /customs-registration-services/:service/register/matching/get-utr/:organisationType          @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.GetUtrNumberController.form(organisationType, service: Service, isInReviewMode: Boolean = false)
POST        /customs-registration-services/:service/register/matching/get-utr/:organisationType          @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.GetUtrNumberController.submit(organisationType, service: Service, isInReviewMode: Boolean = false)
GET         /customs-registration-services/:service/register/matching/get-utr/:organisationType/review   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.GetUtrNumberController.form(organisationType, service: Service, isInReviewMode: Boolean = true)
POST        /customs-registration-services/:service/register/matching/get-utr/:organisationType/review   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.GetUtrNumberController.submit(organisationType, service: Service, isInReviewMode: Boolean = true)

GET         /customs-registration-services/:service/register/you-need-a-different-service                @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.YouNeedADifferentServiceController.form(service: Service)
GET         /customs-registration-services/:service/register/matching/row-name-date-of-birth/:userType   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.RowIndividualNameDateOfBirthController.form(userType, service: Service)
POST        /customs-registration-services/:service/register/matching/row-name-date-of-birth/:userType   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.RowIndividualNameDateOfBirthController.submit(isInReviewMode: Boolean = false, userType, service: Service)
GET         /customs-registration-services/:service/register/matching/row-name-date-of-birth/:userType/review     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.RowIndividualNameDateOfBirthController.reviewForm(userType, service: Service)
POST        /customs-registration-services/:service/register/matching/row-name-date-of-birth/:userType/review     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.RowIndividualNameDateOfBirthController.submit(isInReviewMode: Boolean = true, userType, service: Service)
GET         /customs-registration-services/:service/register/matching/row/nino                           @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DoYouHaveNinoController.displayForm(service: Service)
POST        /customs-registration-services/:service/register/matching/row/nino                           @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DoYouHaveNinoController.submit(service: Service)
GET         /customs-registration-services/:service/register/matching/row/get-nino                       @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.GetNinoController.displayForm(service: Service)
POST        /customs-registration-services/:service/register/matching/row/get-nino                       @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.GetNinoController.submit(service: Service)

GET         /customs-registration-services/:service/register/complete-enrolment                          @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SubscriptionRecoveryController.complete(service: Service)
GET         /customs-registration-services/:service/register/eori-exist                                  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SubscriptionRecoveryController.eoriExist(service: Service)

GET         /customs-registration-services/:service/register/confirm-individual-type                     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ConfirmIndividualTypeController.form(service: Service)
POST        /customs-registration-services/:service/register/confirm-individual-type                     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ConfirmIndividualTypeController.submit(service: Service)

GET         /customs-registration-services/:service/register/sic-code                                    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SicCodeController.createForm(service: Service)
POST        /customs-registration-services/:service/register/sic-code                                    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SicCodeController.submit(isInReviewMode: Boolean = false, service: Service)
GET         /customs-registration-services/:service/register/sic-code/review                             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SicCodeController.reviewForm(service: Service)
POST        /customs-registration-services/:service/register/sic-code/review                             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SicCodeController.submit(isInReviewMode: Boolean = true, service: Service)

# Check below 4 if they're on the registration journey
GET         /customs-registration-services/:service/register/date-established                            @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DateOfEstablishmentController.createForm(service: Service)
POST        /customs-registration-services/:service/register/date-established                            @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DateOfEstablishmentController.submit(isInReviewMode: Boolean = false, service: Service)
GET         /customs-registration-services/:service/register/date-established/review                     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DateOfEstablishmentController.reviewForm(service: Service)
POST        /customs-registration-services/:service/register/date-established/review                     @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DateOfEstablishmentController.submit(isInReviewMode: Boolean = true, service: Service)

GET         /customs-registration-services/:service/register/vat-verification-option                @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatVerificationOptionController.createForm(service: Service)
POST        /customs-registration-services/:service/register/vat-verification-option                @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatVerificationOptionController.submit(service: Service)

GET         /customs-registration-services/:service/register/your-uk-vat-details-date                @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DateOfVatRegistrationController.createForm(service: Service)
POST        /customs-registration-services/:service/register/your-uk-vat-details-date                @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DateOfVatRegistrationController.submit(service: Service)
GET         /customs-registration-services/:service/register/cannot-confirm-vat-details              @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatReturnController.redirectToCannotConfirmIdentity(service: Service)

GET         /customs-registration-services/:service/register/your-uk-vat-details                  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatDetailsController.createForm(service: Service)
POST        /customs-registration-services/:service/register/your-uk-vat-details                @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatDetailsController.submit(isInReviewMode: Boolean = false, service: Service)
GET         /customs-registration-services/:service/register/your-uk-vat-details/review         @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatDetailsController.reviewForm(service: Service)
POST        /customs-registration-services/:service/register/your-uk-vat-details/review         @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatDetailsController.submit(isInReviewMode: Boolean = true, service: Service)
GET         /customs-registration-services/:service/register/when-did-you-become-vat-registered                   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatDetailsController.vatDetailsNotMatched(service: Service)
GET         /customs-registration-services/:service/register/when-did-you-become-vat-registered/review            @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatDetailsController.vatDetailsNotMatched(service: Service)

GET         /customs-registration-services/:service/register/your-uk-vat-details-return                  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatReturnController.createForm(service: Service)
POST        /customs-registration-services/:service/register/your-uk-vat-details-return                @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatReturnController.submit(service: Service)
GET         /customs-registration-services/:service/register/cannot-confirm-vat-details              @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatReturnController.redirectToCannotConfirmIdentity(service: Service)

GET         /customs-registration-services/:service/register/disclose-personal-details-consent           @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DisclosePersonalDetailsConsentController.createForm(service: Service)
POST        /customs-registration-services/:service/register/disclose-personal-details-consent           @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DisclosePersonalDetailsConsentController.submit(isInReviewMode: Boolean = false, service: Service)
GET         /customs-registration-services/:service/register/disclose-personal-details-consent/review    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DisclosePersonalDetailsConsentController.reviewForm(service: Service)
POST        /customs-registration-services/:service/register/disclose-personal-details-consent/review    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.DisclosePersonalDetailsConsentController.submit(isInReviewMode: Boolean = true, service: Service)

GET         /customs-registration-services/:service/register/vat-registered-uk                           @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatRegisteredUkController.createForm(service: Service)
POST        /customs-registration-services/:service/register/vat-registered-uk                           @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatRegisteredUkController.submit(isInReviewMode: Boolean = false, service: Service)
GET         /customs-registration-services/:service/register/vat-registered-uk/review                    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatRegisteredUkController.reviewForm(service: Service)
POST        /customs-registration-services/:service/register/vat-registered-uk/review                    @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatRegisteredUkController.submit(isInReviewMode: Boolean = true, service: Service)

GET         /customs-registration-services/:service/register/vat-group                                   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatGroupController.createForm(service: Service)
POST        /customs-registration-services/:service/register/vat-group                                   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatGroupController.submit(service: Service)

GET         /customs-registration-services/:service/register/you-cannot-register-using-this-service      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.VatGroupsCannotRegisterUsingThisServiceController.form(service: Service)

GET         /customs-registration-services/:service/register/you-need-to-sign-in-with-different-details  @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.SignInWithDifferentDetailsController.form(service: Service)

GET         /customs-registration-services/:service/register/contact-details                             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ContactDetailsController.createForm(service: Service)
POST        /customs-registration-services/:service/register/contact-details                             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ContactDetailsController.submit(isInReviewMode:Boolean = false, service: Service)
GET         /customs-registration-services/:service/register/contact-details/review                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ContactDetailsController.reviewForm(service: Service)
POST        /customs-registration-services/:service/register/contact-details/review                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ContactDetailsController.submit(isInReviewMode:Boolean = true, service: Service)

GET         /customs-registration-services/:service/register/contact-address                             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ContactAddressController.createForm(service: Service)
POST        /customs-registration-services/:service/register/contact-address                             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ContactAddressController.submit(isInReviewMode:Boolean = false, service: Service)
GET         /customs-registration-services/:service/register/contact-address/review                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ContactAddressController.reviewForm(service: Service)
POST        /customs-registration-services/:service/register/contact-address/review                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ContactAddressController.submit(isInReviewMode:Boolean = true, service: Service)

GET         /customs-registration-services/:service/register/logout                                      @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.ApplicationController.logout(service: Service)

GET         /customs-registration-services/:service/register/you-cannot-change-address                   @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.YouCannotChangeAddressController.page(service: Service)

GET         /customs-registration-services/:service/register/address-invalid                             @uk.gov.hmrc.eoricommoncomponent.frontend.controllers.AddressInvalidController.page(service: Service)

->          /                                                                                            health.Routes